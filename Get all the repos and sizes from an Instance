import com.atlassian.sal.api.component.ComponentLocator
import com.atlassian.bitbucket.project.ProjectService
import com.atlassian.bitbucket.repository.Repository
import com.atlassian.bitbucket.repository.RepositoryService

import static com.onresolve.scriptrunner.canned.bitbucket.util.BitbucketCannedScriptUtils.unlimitedPager

def repositoryService = ComponentLocator.getComponent(RepositoryService.class)
def projectService = ComponentLocator.getComponent(ProjectService.class)

def allProjects = projectService.findAll(getUnlimitedPager()).values 
def sizeByProject = allProjects.collect { project ->

    def repos = repositoryService.findByProjectKey(project.key, getUnlimitedPager()).values 
    def repoSizes = repos.collectEntries { Repository repo ->
        [(repo.name): repositoryService.getSize(repo)] 
    }

    [
        project: project.name,
        totalSize: repoSizes.values().sum(),
        repositories: repoSizes
    ]
}
